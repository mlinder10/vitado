generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  binaryTargets   = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  firstName String
  lastName  String
  color     String
  password  String
  createdAt DateTime @default(now())

  admin             Admin?
  resetPassword     ResetPassword[]
  answeredQuestions AnsweredQuestion[]
}

model Admin {
  userId    String   @id
  createdAt DateTime @default(now())

  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  questions Question[]
}

model ResetPassword {
  id         String   @id @default(uuid())
  code       String   @unique
  validUntil DateTime
  userId     String   @unique

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Question {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  creatorId String

  system      String
  category    String
  subcategory String
  type        String

  question     String @db.Text
  answer       String @db.Char(1)
  choices      String @db.Text
  explanations String @db.Text

  sources        String
  difficulty     String
  nbmeStyleNotes String @db.Text

  creator           Admin              @relation(fields: [creatorId], references: [userId], onDelete: NoAction)
  audit             Audit?
  answeredQuestions AnsweredQuestion[]
}

model Audit {
  id         String @id @default(uuid())
  questionId String @unique

  checklist   String @db.Text
  suggestions String @db.Text
  rating      String

  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
}

model AnsweredQuestion {
  userId     String
  questionId String
  createdAt  DateTime @default(now())
  userAnswer String

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@id([userId, questionId])
}
